/*!
 * DataElement v1.0.0
 * @author salvatore mariniello - salvo.mariniello@gmail.com 
 * https://github.com/mssalvo/DataElement
 *  GNU General Public License v3.0
 *  https://github.com/mssalvo/DataElement/blob/master/LICENSE
 *  
 * @example istance      
 *  var dataIstance=new DataElement(
 *            {
 *           box:'div.list-group',  >> Indicare l'elemento html principale che racchiude gli elementi figli (rows) 
 *           row:'a.list-group-item', >> Indicare elemento html figlio (row) 
 *           comboPages:'select.custom-select', >> Indicare la select html che da la possibilita di selezionare il numero di elementi da visualizzare. 
 *           pages:[2,3,5,7], >> Indicare i valori che popolano la select <comboPages> per la visualizzazione delle righe.
 *           labelPageCurrent:'span.current',  >> Indicare elemento html che contiele il valore della pagina corrente
 *           labelPageTotal:'span.total',   >> Indicare elemento html che contiele il valore del totale pagine
 *           btnNext:'button.next',      >> Indicare elemento html che esegue l'evento di pagina successiva (<button> <input> <a> <div> etc.)
 *           btnPrevious:'button.previous' >> Indicare elemento html che esegue l'evento di pagina precedente  (<button> <input> <a> <div> etc.)
 *           });
 *  
 *  @example next
 *  @function dataIstance.next()
 *  
 *  @example previous
 *  @function dataIstance.previous()
 *
 *  @example refreshLimit
 *  @function dataIstance.refreshLimit(n)
 *  
 *  
 */
function DataElement(b){if(b){var a=this;a.new_().settyng(b)}}DataElement.rows=[];DataElement.selectorBox={};DataElement.selectorRowName="";DataElement.limit=4;DataElement.pagination={};DataElement.pageCurrent=0;DataElement.pageMax=1;DataElement.labelPageCurrent=undefined;DataElement.labelPageTotal=undefined;DataElement.btnNext=undefined;DataElement.btnPrevious=undefined;DataElement.comboPages=undefined;DataElement.pages=["10","20","30","40","50"];DataElement.prototype.settyng=function(b){this.pages=["1","2","3","4","5"];this.btnNext=undefined;this.btnPrevious=undefined;if(b.box){this.selectorBox=document.querySelector(b.box)}if(b.row){this.selectorRowName=b.row}this.rows=[];this.pageCurrent=0;if(b.pages){this.pages=b.pages}if(b.btnNext){this.btnNext=document.querySelectorAll(b.btnNext)}if(b.btnPrevious){this.btnPrevious=document.querySelectorAll(b.btnPrevious)}if(b.comboPages){this.comboPages=document.querySelectorAll(b.comboPages)}if(b.labelPageCurrent){this.labelPageCurrent=document.querySelectorAll(b.labelPageCurrent)}if(b.labelPageTotal){this.labelPageTotal=document.querySelectorAll(b.labelPageTotal)}this.limit=Number(this.pages[0]);var a=this;return a.init().initComboPages().initButtons().next().writeLabels()};DataElement.prototype.getCurrentPage=function(){return this.pageCurrent};DataElement.prototype.getTotalPage=function(){return this.pageMax};DataElement.prototype.new_=function(){this.rows=[];this.selectorBox=undefined;this.selectorRowName="";this.limit=10;this.pagination=undefined;this.pageCurrent=0;this.pageMax=1;this.labelPageCurrent=undefined;this.labelPageTotal=undefined;this.btnNext=undefined;this.btnPrevious=undefined;this.comboPages=undefined;this.pages=["10","20","30","50","100"];this.back=false;return this};DataElement.prototype.next=function(){++this.pageCurrent;this.back=false;this.clear();var d=0;if(this.pageCurrent>1){d=((this.limit*this.pageCurrent)-this.limit)<=this.rows.length?((this.limit*this.pageCurrent)-this.limit):((this.limit*(this.pageCurrent-1))-this.limit)}var a=(this.limit*(this.pageCurrent));if((d+this.limit)>=this.rows.length){--this.pageCurrent;this.back=true}if(d>=this.rows.length){d=this.rows.length-1}var c=this.rows.slice(d,a);for(var b in c){this.selectorBox.appendChild(c[b])}this.writeLabels();return this};DataElement.prototype.previous=function(){this.clear();if(!this.back){--this.pageCurrent}this.back=false;if(this.pageCurrent<1){this.pageCurrent=1}var d=0;if(this.pageCurrent>1){d=((this.limit*this.pageCurrent)-this.limit)<=this.rows.length?((this.limit*this.pageCurrent)-this.limit):((this.limit*(this.pageCurrent-1))-this.limit)}var a=(this.limit*this.pageCurrent);var c=this.rows.slice(d,a);for(var b in c){this.selectorBox.appendChild(c[b])}this.writeLabels();return this};DataElement.prototype.clear=function(){var a=this;Array.prototype.forEach.call(a.selectorBox.querySelectorAll(a.selectorRowName),function(c,b){c.parentNode.removeChild(c)});return this};DataElement.prototype.init=function(){var a=this;Array.prototype.forEach.call(a.selectorBox.querySelectorAll(a.selectorRowName),function(c,b){a.rows.push(c);c.parentNode.removeChild(c)});this.pageMax=Math.ceil((a.rows.length/a.limit));return this};DataElement.prototype.refreshLimit=function(e){if(e){this.limit=Number(e)}this.pageCurrent=1;this.clear();var d=0;var a=(this.limit*(this.pageCurrent));var c=this.rows.slice(d,a);for(var b in c){this.selectorBox.appendChild(c[b])}this.pageMax=Math.ceil((this.rows.length/this.limit));if(e){Array.prototype.forEach.call(this.comboPages,function(g,f){g.value=e})}this.writeLabels();return this};DataElement.prototype.writeLabels=function(){var a=this;if(typeof(this.labelPageCurrent)!=="undefined"){Array.prototype.forEach.call(a.labelPageCurrent,function(c,b){c.innerHTML=a.back?(a.pageCurrent+1):a.pageCurrent})}if(typeof(this.labelPageTotal)!=="undefined"){Array.prototype.forEach.call(a.labelPageTotal,function(c,b){c.innerHTML=a.pageMax})}return this};DataElement.prototype.initComboPages=function(){var a=this;if(this.comboPages){Array.prototype.forEach.call(this.comboPages,function(d,c){d.innerHTML="";for(var c in a.pages){var b=document.createElement("option");b.text=a.pages[c];d.add(b)}d.addEventListener("change",function(){a.refreshLimit(d.value)},false)})}return this};DataElement.prototype.initButtons=function(){var a=this;if(this.btnNext){Array.prototype.forEach.call(this.btnNext,function(c,b){c.addEventListener("click",function(){a.next()},false)})}if(this.btnPrevious){Array.prototype.forEach.call(this.btnPrevious,function(c,b){c.addEventListener("click",function(){a.previous()},false)})}return this};DataElement.prototype.filter=function(){};DataElement.prototype.search=function(){};if(!("forEach" in Array.prototype)){Array.prototype.forEach=function(c,b){for(var a=0,d=this.length;a<d;a++){if(a in this){c.call(b,this[a],a,this)}}}};